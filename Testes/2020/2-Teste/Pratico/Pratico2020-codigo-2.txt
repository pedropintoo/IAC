
# DEP. ELECTRÓNICA, TELECOMUNICAÇÕES E INFORMÁTICA - Univ. Aveiro
# Teste Prático 2 de IAC - 13 de Junho de 2020
# 

# ------------------------------------------------------------------
# NOTA: Use este ficheiro para responder à questão 3).
# ------------------------------------------------ 
# ------------------- Código C -------------------
# void main( void ) {
# static int  oper1 = -417;
# static char oper2 = -56;
# static int  result;
#  while( oper2 < -8 ) { 
#     oper2 = oper2>>1;
#  }
#   result = oper1 - oper2;
#   print_int16( result);
#   exit();
# }
# -------------------------------------------------
# Registos:
# ----------
# Variável |  Registo(s)
#  oper1   |  $t0
#  &oper1  |  $t2
#  oper2   |  $t1
#  &oper2  | $t5
#  result  |  
#  &result | 
# -------------------	
	.eqv	PRINT_INT16,34	
	.eqv	EXIT,10		
	
#	
		
	.data
oper1:	.byte -417
oper2:	.word -56
result: .space 4

	.text
	.globl main
main:	la 	$t0,oper1	#
	la 	$t1,oper2
	lb 	$t2,0($t1)
while: 	bge 	$t2,-8,ewhile
	srl	$t2, $t2, 1
	j while
ewhile: lw $t4, 0($t0)
	sub $a0, $t4,$t2	
	la $t5, result
 	sw $a0, 0($t5)
 	li $v0, PRINT_INT16
 	syscall
 	li $v0, EXIT
	syscall